name: Auto Build & Release ESP01 Firmware

on:
  workflow_dispatch:  # Manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for full git history

      - name: 🧮 Calculate next version based on lines changed
        id: version
        run: |
          latest=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $latest"
          parts=(${latest//./ })
          major=${parts[0]#v}
          minor=${parts[1]:-0}
          patch=${parts[2]:-0}

          # Count line changes since last tag (or all if no tag)
          if git rev-parse "$latest" >/dev/null 2>&1; then
            diffstat=$(git diff "$latest"..HEAD --shortstat | awk '{print $1 + $3}')
          else
            diffstat=$(git diff HEAD --shortstat | awk '{print $1 + $3}')
          fi

          # Bump version based on magnitude of change
          if [ "$diffstat" -gt 300 ]; then
            major=$((major+1))
            minor=0
            patch=0
          elif [ "$diffstat" -gt 100 ]; then
            minor=$((minor+1))
            patch=0
          else
            patch=$((patch+1))
          fi

          next="v$major.$minor.$patch"
          echo "✅ Next version: $next"
          echo "version=$next" >> $GITHUB_OUTPUT

      - name: 📝 Patch version into source
        run: |
          version=${{ steps.version.outputs.version }}
          sed -i "s/v{{VERSION}}/$version/g" platformio.ini || true
          sed -i "s/v{{VERSION}}/$version/g" include/Configs.hpp || true

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: 🛠️ Install PlatformIO
        run: pip install platformio

      - name: ⚙️ Build firmware
        run: platformio run

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Firmware ${{ steps.version.outputs.version }}
          files: .pio/build/*/firmware.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
