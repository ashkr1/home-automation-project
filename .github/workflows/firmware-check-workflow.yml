name: Verify ESP01 Firmware Build

on:
  push:
    branches:
      - main

jobs:
  verify-build:
    runs-on: ubuntu-latest

    steps:
      - name: üìÖ Checkout code
        uses: actions/checkout@v4

      - name: üêç Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: üí† Install PlatformIO
        run: pip install platformio

      - name: ‚öôÔ∏è Patch Firebase API key into configs
        run: |
          sed -i "s|{{FIREBASE_API_KEY}}|${{ secrets.FIREBASE_API_KEY }}|g" include/Configs.hpp

      - name: üîê Inject MQTT certificate into MQTTServer.cpp
        run: |
          echo "${{ secrets.MQTT_CONNECTION_CERT }}" > cert.pem

          awk '
            /{{MQTT_CONNECTION_CERT}}/ {
              while ((getline line < "cert.pem") > 0) print line;
              next
            }
            { print }
          ' src/MQTTServer.cpp > src/MQTTServer.cpp.new

          mv src/MQTTServer.cpp.new src/MQTTServer.cpp
          shred -u cert.pem || rm -f cert.pem

      - name: üîç Context check for embedded certificate
        run: |
          echo "üîé Checking lines around BEGIN CERTIFICATE:"
          awk '/BEGIN CERTIFICATE/ {for(i=NR-2;i<=NR+2;i++) print lines[i]; next} {lines[NR]=$0}' src/MQTTServer.cpp

          echo "üîé Checking lines around END CERTIFICATE:"
          awk '/END CERTIFICATE/ {for(i=NR-2;i<=NR+2;i++) print lines[i]; next} {lines[NR]=$0}' src/MQTTServer.cpp

      - name: ‚ö°Ô∏è Build esp01_1m using mqtt environments
        run: |
          platformio run -e esp01_1m_using_mqtt

      - name: ‚ö°Ô∏è Build esp01_1m using firebase environments
        run: |
          platformio run -e esp01_1m_using_firebase

      - name: ‚ö°Ô∏è Build esp d1 mini using mqtt environments
        run: |
          platformio run -e d1_mini_using_mqtt


      - name: ‚ö°Ô∏è Build esp d1 mini using firebase environments
        run: |
          platformio run -e d1_mini_using_firebase

      - name: üìÇ Check firmware bin files
        run: |
          for env in esp01_1m_using_firebase esp01_1m_using_mqtt d1_mini_using_firebase d1_mini_using_mqtt; do
            BIN_FILE=".pio/build/$env/firmware.bin"
            if [ ! -f "$BIN_FILE" ]; then
              echo "‚ùå Missing firmware binary for $env"
              exit 1
            else
              echo "‚úÖ Found: $BIN_FILE"
            fi
          done
